@using MoneySaver.Web.ViewModels.Wallets

@model WalletDetailsViewModel
@{
    this.ViewData["Title"] = "Details - " + Model.WalletName;
    string badgeClassName = "success";
    //string balanceMessage = "Note! Your balance is negative!";
}
<div class="bg-white">
    <div class="template-demo mb-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-custom bg-inverse-primary">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Wallets" asp-action="AllWallets">Wallets</a></li>
                <li class="breadcrumb-item active" aria-current="page"><span>@Model.WalletName</span></li>

            </ol>
        </nav>
    </div>
</div>
    <div class="row">
        <div class="col-12">
            <div class="form-inline d-flex justify-content-center h3">
                @Model.WalletName - Overview
                <div class="input-group-sm d-flex justify-content-end ml-4">
                    <a asp-controller="Wallets" asp-action="Edit" asp-route-id="@Model.WalletId" class="btn btn-sm btn-outline-primary"><i class="mdi mdi-lead-pencil"></i></a>
                </div>
            </div>

            <br />
            <div class="d-flex justify-content-center">
                <div class="pr-1">
                    <vc:add-record wallet-id="@Model.WalletId"></vc:add-record>
                </div>
                <div class="pr-1">
                    <vc:add-category wallet-id="@Model.WalletId"></vc:add-category>
                </div>
                <div class="pr-1">
                    <vc:all-records-by-wallet wallet-id="@Model.WalletId"></vc:all-records-by-wallet>
                </div>

                <vc:wallet-statistics id="@Model.WalletId"></vc:wallet-statistics>

            </div>
            <br />
            <div class="row">
                <div class="col-lg-3 col-sm-6 col-md-6 grid-margin stretch-card text-center">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Balance : <span class="h4 text-info"><span style="display:block;" class="h4 mt-2">@Model.CurrentBalance @Model.Currency</span></span></h4>
                            <div class="d-flex justify-content-between">
                                <p class="text-muted">30 days change:</p>
                                <p class="text-info">@Model.TotalWalletBalanceLast30Days</p>
                            </div>
                            <div class="progress progress-md">
                                <div class="progress-bar bg-info w-100" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-sm-6 col-md-6 grid-margin stretch-card text-center">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Incomes: <span class="h4 text-success"><span style="display:block;" class="h4 mt-2">@Model.TotalWalletIncomes @Model.Currency</span></span></h4>
                            <div class="d-flex justify-content-between">
                                <p class="text-muted">Last 30 days:</p>
                                <p class="text-success">@Model.TotalWalletIncomesLast30Days</p>
                            </div>
                            <div class="progress progress-md">
                                <div class="progress-bar bg-success w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-sm-6 col-md-6 grid-margin stretch-card text-center">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Expenses: <span class="h4 text-danger"><span style="display:block;" class="h4 mt-2">@Model.TotalWalletExpenses @Model.Currency</span></span></h4>
                            <div class="d-flex justify-content-between">
                                <p class="text-muted">Last 30 days:</p>
                                <p class="text-danger">@Model.TotalWalletExpensesLast30Days</p>
                            </div>
                            <div class="progress progress-md">
                                <div class="progress-bar bg-danger w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-sm-6 col-md-6 grid-margin stretch-card text-center">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Total Records: <span class="h4 text-warning"><span style="display:block;" class="h4 mt-2">@Model.Records.Count()</span></span></h4>
                            <div class="d-flex justify-content-between">
                                <p class="text-muted">Last 30 days:</p>
                                <p class="text-muted">@Model.TotalRecordsCountLast30Days</p>
                            </div>
                            <div class="progress progress-md">
                                <div class="progress-bar bg-warning w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-12 col-sm-12 grid-margin grid-margin stretch-card float-left">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title"><span class="badge bg-inverse-success"><span class="mdi mdi-arrow-right-bold text-success"></span></span> Last 30 days incomes</h4>
                <div class="table-responsive">
                    <table class="table text-center table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="pt-1 pl-0">
                                    Category
                                </th>
                                <th class="pt-1">
                                    Incomes Amount
                                </th>
                                <th class="pt-1">
                                   Percent
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.MonthIncomes.Where(c => c.TotalIncomesLast30days != 0).OrderByDescending(c => c.TotalIncomesLast30days))
                            {
                                <tr class="card-shadow" onclick="window.location='/Categories/Details/' + @category.CategoryId">
                                    <td class="py-1 pl-0">
                                        <div class="d-flex align-items-center">
                                            <div class="ml-3">
                                                <a href="/Categories/Details/@category.CategoryId"><p class="mb-2 badge badge-@category.BadgeColor.ToString().ToLower()">@category.CategoryName</p></a>
                                                <p class="text-muted text-small">@category.TotalIncomeRecordsLast30Days incomes</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (category.TotalIncomesLast30days < 0)
                                        {
                                            badgeClassName = "danger";
                                        }

                                        else if (category.TotalIncomesLast30days == 0)
                                        {
                                            badgeClassName = "secondary";
                                        }

                                        else
                                        {
                                            badgeClassName = "success";
                                        }
                                        <p class="text-@badgeClassName font-weight-bold">
                                            @category.TotalIncomesLast30days  @Model.Currency
                                        </p>
                                    </td>
                                    <td>
                                        <p class="font-weight-bold text-info">
                                        @{
                                            decimal percentOfAllWalletIncomes = 0;

                                            if (Model.TotalWalletIncomesLast30Days != 0)
                                            {
                                                percentOfAllWalletIncomes = Math.Round((category.TotalIncomesLast30days / Model.TotalWalletIncomesLast30Days * 100), 1);
                                            }
                                        }

                                        @percentOfAllWalletIncomes %
                                            </p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    @if (Model.MonthIncomes.Count() < 1)
                    {<br />
                        <div class="btn-group form-inline">
                            <div class="input-group-sm mr-sm-1 mb-0">
                                <vc:add-category wallet-id="@Model.WalletId"></vc:add-category>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 col-12 col-sm-12 grid-margin grid-margin stretch-card float-left">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title"><span class="badge bg-inverse-danger"><span class="mdi mdi-arrow-left-bold text-danger"></span> </span> Last 30 days expenses</h4>
                <div class="table-responsive">
                    <table class="table text-center table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="pt-1 pl-0">
                                    Category
                                </th>
                                <th class="pt-1">
                                    Expenses Amount
                                </th>
                                <th class="pt-1">
                                    Percent
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.MonthExpenses.Where(c => c.TotalExpensesLast30Days != 0).OrderBy(c => c.TotalExpensesLast30Days))
                            {
                            <tr class="card-shadow" onclick="window.location='/Categories/Details/' + @category.CategoryId">
                                <td class="py-1 pl-0">
                                    <div class="d-flex align-items-center">
                                        <div class="ml-3">

                                            <a href="/Categories/Details/@category.CategoryId"><p class="mb-2 badge badge-@category.BadgeColor.ToString().ToLower()">@category.CategoryName</p></a>
                                            <p class="text-muted text-small">@category.TotalExpenseRecordsLast30Days expenses</p>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @if (category.TotalExpensesLast30Days < 0)
                                    {
                                        badgeClassName = "danger";
                                    }

                                    else if (category.TotalExpensesLast30Days == 0)
                                    {
                                        badgeClassName = "secondary";
                                    }

                                    else
                                    {
                                        badgeClassName = "success";
                                    }
                                    <p class="text-@badgeClassName font-weight-bold">@category.TotalExpensesLast30Days @Model.Currency</p>
                                </td>
                                <td>
                                    <p class="font-weight-bold text-info">
                                        @{
                                            decimal percentOfAllWalletExpenses = 0;

                                            if (Model.TotalWalletExpensesLast30Days != 0)
                                            {
                                                percentOfAllWalletExpenses = 
                                                    Math.Round(
                                                        (Math.Abs(category.TotalExpensesLast30Days) / Math.Abs(Model.TotalWalletExpensesLast30Days) * 100)
                                                        , 1);
                                            }
                                        }

                                        @percentOfAllWalletExpenses %
                                    </p>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model.MonthExpenses.Count() < 1)
                    {<br />
                        <div class="btn-group form-inline">
                            <div class="input-group-sm mr-sm-1 mb-0">
                                <vc:add-category wallet-id="@Model.WalletId"></vc:add-category>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-12 grid-margin grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Last 10 records</h4>
                <div class="table-responsive">
                    <table class="table text-center table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="pt-1">
                                    Date
                                </th>
                                <th class="pt-1">
                                    Description
                                </th>
                                <th class="pt-1">
                                    Amount
                                </th>
                                <th class="pt-1">
                                    Category
                                </th>
                                <th class="pt-1">
                                    Edit/Delete
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var record in Model.Records.Take(10))
                            {
                                <tr class="card-shadow">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="badge badge-outline-primary" data-toggle="tooltip" data-placement="bottom" title="Added on"> @record.CreatedOn</span>
                                        </div>
                                    </td>
                                    <td>
                                        @if (record.Description.Length > 25)
                                        {
                                            string descriptionExcerpt = record.Description.Substring(0, 25) + "...";
                                            record.Description = descriptionExcerpt;
                                        }

                                        @record.Description
                                    </td>
                                    <td>
                                        @if (record.Amount < 0)
                                        {
                                            badgeClassName = "danger";
                                        }

                                        else if (record.Amount == 0)
                                        {
                                            badgeClassName = "secondary";
                                        }

                                        else
                                        {
                                            badgeClassName = "success";
                                        }
                                        <p class="text-@badgeClassName font-weight-bold">@record.Amount @Model.Currency</p>
                                    </td>
                                    <td><a href="/Categories/Details/@record.CategoryId"><p class="mb-2 badge badge-@record.CategoryBadgeColor.ToString().ToLower()">@record.CategoryName</p></a></td>
                                    <td>
                                        <vc:edit-record record-id="@record.Id" wallet-id="@Model.WalletId"></vc:edit-record>
                                        <vc:delete-record-small-button record-id="@record.Id"></vc:delete-record-small-button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                    <div class="btn-group form-inline">
                        @if (Model.Records.Count() > 0)
                        {
                            <div class="input-group-sm mr-sm-1 mb-0">
                                <button class="btn btn-sm btn-primary" onclick="location.href='/Wallets/Records/@Model.WalletId'" type="button"><i class="mdi mdi-dots-horizontal"></i> More</button>

                            </div>
                            <span class="mr-2 ml-2 mb-0">  or </span>
                        }
                        <div class="input-group-sm mr-sm-1 mb-0">
                            <vc:add-record wallet-id="@Model.WalletId"></vc:add-record>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-12 grid-margin grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Categories summary</h4>
                <div class="table-responsive">
                    <table class="table text-center table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="pt-1 pl-0">
                                    Category
                                </th>
                                <th class="pt-1">
                                    Incomes
                                </th>
                                <th class="pt-1">
                                    Expenses
                                </th>
                                <th class="pt-1">
                                    Edit / Delete
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.Categories.OrderByDescending(x => x.RecordsCount))
                            {
                                <tr class="card-shadow" onclick="window.location='/Categories/Details/@category.CategoryId'">
                                    <td class="py-1 pl-0">
                                        <div class="d-flex align-items-center">
                                            <div class="ml-3">
                                                <a href="/Categories/Details/@category.CategoryId"><p class="mb-2 badge badge-@category.BadgeColor.ToString().ToLower()">@category.CategoryName</p></a>
                                                <p class="text-muted text-small">@category.RecordsCount records</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (category.TotalIncomes < 0)
                                        {
                                            badgeClassName = "danger";
                                        }

                                        else if (category.TotalIncomes == 0)
                                        {
                                            badgeClassName = "secondary";
                                        }

                                        else
                                        {
                                            badgeClassName = "success";
                                        }
                                        <p class="text-@badgeClassName font-weight-bold">@category.TotalIncomes @Model.Currency</p>
                                    </td>
                                    <td>
                                        @if (category.TotalExpenses < 0)
                                        {
                                            badgeClassName = "danger";
                                        }

                                        else if (category.TotalExpenses == 0)
                                        {
                                            badgeClassName = "secondary";
                                        }

                                        else
                                        {
                                            badgeClassName = "success";
                                        }
                                        <p class="text-@badgeClassName font-weight-bold">@category.TotalExpenses @Model.Currency</p>
                                    </td>
                                    <td>
                                        <vc:edit-category category-id="@category.CategoryId" wallet-id="@Model.WalletId"></vc:edit-category>
                                        <vc:delete-category category-id="@category.CategoryId" wallet-id="@Model.WalletId"></vc:delete-category>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                    <div class="btn-group form-inline">
                        @if (Model.Categories.Count() > 0)
                        {
                            <div class="input-group-sm mr-sm-1 mb-0">
                                <vc:wallet-statistics id="@Model.WalletId"></vc:wallet-statistics>
                            </div>
                            <span class="mr-2 ml-2 mb-0"> or </span>
                        }
                        <div class="input-group-sm mr-sm-1 mb-0">
                            <vc:add-category wallet-id="@Model.WalletId"></vc:add-category>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts
    {
        <script>
            $(document).ready(function () {
                // executes when HTML-Document is loaded and DOM is ready
                console.log("document is ready");


                $(".card-shadow").hover(
                    function () {
                        $(this).addClass('shadow-sm').css('cursor', 'pointer');
                    }, function () {
                        $(this).removeClass('shadow-sm');
                    }
                );

                // document ready
            });

        </script>
    }
